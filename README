Meet Junkie the network sniffer!
================================

As the heart of SecurActive_ network performance monitoring application
lies a real-time packet sniffer and analyzer. Modular enough to accomplish
many different tasks, we believe this tool can be a helpful companion
to the modern network administrator and analyst, and so we decided to offer it
to the public under a liberal license so that the Open Source community can
use it, play with it, and extend it with whatever feature is deemed
appropriate.

Compared to previously available tools junkie lies in between tcpdump and
wireshark. Unlike tcpdump, its purpose is to parse protocols of any depth;
unlike wireshark, through, junkie is designed to analyze traffic in real-time
and so cannot parse traffic as completely as wireshark does.

In addition, junkie's design encompasses extendability and speed:

- plug-in system + high-level extension language that eases the development and
  combination of new functionalities;

- threaded packet capture and analysis for handling of high bandwidth network;

- modular architecture to ease the addition of any protocol layer;

- based on libpcap for portability;

- well tested on professional settings.


Junkie is still being maintained and extended by SecurActive dedicated team
but we believe it can be further extended to fulfill many unforeseen purposes.

.. _SecurActive: http://www.securactive.net

Limitations
===========

As a realtime protocol analyzer, Junkie is limited in what protocols it 
supports and how deep it inspects packets. Here is a quick overview of the 
most blatant limitations:

- Ethernet parser supports Linux cooked capture extension (used when capturing 
  on "any" interfaces) and 802.1q vlan tags. All other Ethernet extensions are
  ignored.

- Http parser does not support chunked transport encoding nor multi-line 
  headers.

- ARP parser knows only Ethernet and IP addresses.

- DNS parser support MDNS, NBNS and LLMNR in the extend where these protocols 
  mimic legacy DNS (with the exception that it can unscramble NetBios encoded
  names).

- FTP connection tracking merely look for PASSV or PORT commands in the TCP
  stream without much care for the actual protocol.

- TCP options are ignored.

- Postgresql parser supports only protocol version 3.0 and Mysql parser
  supports only protocol version 10.  This should cover most of the installed
  base, though.

- TNS parser (for Oracle databases) was roughly reverse engineered from
  various sources, especially the wireshark source code. It should thus not
  be expected to understand all messages in all situations.

- SIP parser implements no proprietary extensions, however prevalent.

- VoIP dialogs are identified by their call-id only, which imply that if
  the sniffer listens to various independent SIP proxys or servers then
  call-id collisions can not be ruled out (this choice was made because
  it proven useful in practice).

